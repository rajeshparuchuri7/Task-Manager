{"ast":null,"code":"export const getTaskBadgeStatus = task => {\n  if (task.status === 'Done') {\n    return 'On Track';\n  }\n  const dueDate = new Date(task.dueDate);\n  const now = new Date();\n  const timeDiff = dueDate.getTime() - now.getTime();\n  const hoursDiff = timeDiff / (1000 * 60 * 60);\n  if (hoursDiff < 0) {\n    return 'Overdue';\n  } else if (hoursDiff <= 24) {\n    return 'At Risk';\n  } else {\n    return 'On Track';\n  }\n};\nexport const getBadgeColor = status => {\n  switch (status) {\n    case 'On Track':\n      return 'bg-green-100 text-green-800';\n    case 'At Risk':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'Overdue':\n      return 'bg-red-100 text-red-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\nexport const getPriorityColor = priority => {\n  switch (priority) {\n    case 'High':\n      return 'bg-red-100 text-red-700';\n    case 'Medium':\n      return 'bg-yellow-100 text-yellow-700';\n    case 'Low':\n      return 'bg-blue-100 text-blue-700';\n    default:\n      return 'bg-gray-100 text-gray-700';\n  }\n};\nexport const formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n};","map":{"version":3,"names":["getTaskBadgeStatus","task","status","dueDate","Date","now","timeDiff","getTime","hoursDiff","getBadgeColor","getPriorityColor","priority","formatDate","dateString","date","toLocaleDateString","month","day","year"],"sources":["C:/Users/saipa/task-manager/src/pages/utils/taskUtils.jsx"],"sourcesContent":["\r\n\r\nexport const getTaskBadgeStatus = (task) => {\r\n  if (task.status === 'Done') {\r\n    return 'On Track';\r\n  }\r\n\r\n  const dueDate = new Date(task.dueDate);\r\n  const now = new Date();\r\n  const timeDiff = dueDate.getTime() - now.getTime();\r\n  const hoursDiff = timeDiff / (1000 * 60 * 60);\r\n\r\n  if (hoursDiff < 0) {\r\n    return 'Overdue';\r\n  } else if (hoursDiff <= 24) {\r\n    return 'At Risk';\r\n  } else {\r\n    return 'On Track';\r\n  }\r\n};\r\n\r\nexport const getBadgeColor = (status) => {\r\n  switch (status) {\r\n    case 'On Track':\r\n      return 'bg-green-100 text-green-800';\r\n    case 'At Risk':\r\n      return 'bg-yellow-100 text-yellow-800';\r\n    case 'Overdue':\r\n      return 'bg-red-100 text-red-800';\r\n    default:\r\n      return 'bg-gray-100 text-gray-800';\r\n  }\r\n};\r\n\r\nexport const getPriorityColor = (priority) => {\r\n  switch (priority) {\r\n    case 'High':\r\n      return 'bg-red-100 text-red-700';\r\n    case 'Medium':\r\n      return 'bg-yellow-100 text-yellow-700';\r\n    case 'Low':\r\n      return 'bg-blue-100 text-blue-700';\r\n    default:\r\n      return 'bg-gray-100 text-gray-700';\r\n  }\r\n};\r\n\r\nexport const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString('en-US', {\r\n    month: 'short',\r\n    day: 'numeric',\r\n    year: 'numeric',\r\n  });\r\n};\r\n"],"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAIC,IAAI,IAAK;EAC1C,IAAIA,IAAI,CAACC,MAAM,KAAK,MAAM,EAAE;IAC1B,OAAO,UAAU;EACnB;EAEA,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACH,IAAI,CAACE,OAAO,CAAC;EACtC,MAAME,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;EACtB,MAAME,QAAQ,GAAGH,OAAO,CAACI,OAAO,CAAC,CAAC,GAAGF,GAAG,CAACE,OAAO,CAAC,CAAC;EAClD,MAAMC,SAAS,GAAGF,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAE7C,IAAIE,SAAS,GAAG,CAAC,EAAE;IACjB,OAAO,SAAS;EAClB,CAAC,MAAM,IAAIA,SAAS,IAAI,EAAE,EAAE;IAC1B,OAAO,SAAS;EAClB,CAAC,MAAM;IACL,OAAO,UAAU;EACnB;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIP,MAAM,IAAK;EACvC,QAAQA,MAAM;IACZ,KAAK,UAAU;MACb,OAAO,6BAA6B;IACtC,KAAK,SAAS;MACZ,OAAO,+BAA+B;IACxC,KAAK,SAAS;MACZ,OAAO,yBAAyB;IAClC;MACE,OAAO,2BAA2B;EACtC;AACF,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,QAAQA,QAAQ;IACd,KAAK,MAAM;MACT,OAAO,yBAAyB;IAClC,KAAK,QAAQ;MACX,OAAO,+BAA+B;IACxC,KAAK,KAAK;MACR,OAAO,2BAA2B;IACpC;MACE,OAAO,2BAA2B;EACtC;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,UAAU,IAAK;EACxC,MAAMC,IAAI,GAAG,IAAIV,IAAI,CAACS,UAAU,CAAC;EACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,OAAO,EAAE;IACtCC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}