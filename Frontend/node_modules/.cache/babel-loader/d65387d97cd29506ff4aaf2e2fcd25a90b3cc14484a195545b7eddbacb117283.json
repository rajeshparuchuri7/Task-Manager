{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saipa\\\\task-manager\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const userData = localStorage.getItem('authUser');\n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser({\n          ...parsedUser,\n          token\n        });\n      } catch (error) {\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('authUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    // Mock login - in real app, this would call your API\n    const mockUser = {\n      id: '1',\n      email,\n      name: email.split('@')[0],\n      token: 'mock-jwt-token'\n    };\n    setUser(mockUser);\n    localStorage.setItem('authToken', mockUser.token);\n    localStorage.setItem('authUser', JSON.stringify({\n      id: mockUser.id,\n      email: mockUser.email,\n      name: mockUser.name\n    }));\n  };\n  const signup = async (email, password, name) => {\n    // Mock signup - in real app, this would call your API\n    const mockUser = {\n      id: Date.now().toString(),\n      email,\n      name,\n      token: 'mock-jwt-token'\n    };\n    setUser(mockUser);\n    localStorage.setItem('authToken', mockUser.token);\n    localStorage.setItem('authUser', JSON.stringify({\n      id: mockUser.id,\n      email: mockUser.email,\n      name: mockUser.name\n    }));\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('authUser');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Async thunk for login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    // Mock API (replace with real API call later)\n    if (email === \"test@example.com\" && password === \"123456\") {\n      return {\n        id: \"1\",\n        email,\n        name: \"Test User\",\n        token: \"mock-jwt-token\"\n      };\n    } else {\n      return rejectWithValue(\"Invalid email or password\");\n    }\n  } catch (error) {\n    return rejectWithValue(\"Something went wrong\");\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.error = null;\n      localStorage.removeItem(\"authToken\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      localStorage.setItem(\"authToken\", action.payload.token);\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","error","removeItem","login","email","password","mockUser","id","name","split","setItem","stringify","signup","Date","now","toString","logout","_jsxDEV","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","createSlice","createAsyncThunk","jsxDEV","loginUser","rejectWithValue","authSlice","initialState","reducers","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer","$RefreshReg$"],"sources":["C:/Users/saipa/task-manager/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    const userData = localStorage.getItem('authUser');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        const parsedUser = JSON.parse(userData);\r\n        setUser({ ...parsedUser, token });\r\n      } catch (error) {\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('authUser');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    // Mock login - in real app, this would call your API\r\n    const mockUser = {\r\n      id: '1',\r\n      email,\r\n      name: email.split('@')[0],\r\n      token: 'mock-jwt-token'\r\n    };\r\n    \r\n    setUser(mockUser);\r\n    localStorage.setItem('authToken', mockUser.token);\r\n    localStorage.setItem('authUser', JSON.stringify({\r\n      id: mockUser.id,\r\n      email: mockUser.email,\r\n      name: mockUser.name\r\n    }));\r\n  };\r\n\r\n  const signup = async (email, password, name) => {\r\n    // Mock signup - in real app, this would call your API\r\n    const mockUser = {\r\n      id: Date.now().toString(),\r\n      email,\r\n      name,\r\n      token: 'mock-jwt-token'\r\n    };\r\n    \r\n    setUser(mockUser);\r\n    localStorage.setItem('authToken', mockUser.token);\r\n    localStorage.setItem('authUser', JSON.stringify({\r\n      id: mockUser.id,\r\n      email: mockUser.email,\r\n      name: mockUser.name\r\n    }));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('authUser');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, signup, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Async thunk for login\r\nexport const loginUser = createAsyncThunk(\r\n  \"auth/loginUser\",\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      // Mock API (replace with real API call later)\r\n      if (email === \"test@example.com\" && password === \"123456\") {\r\n        return {\r\n          id: \"1\",\r\n          email,\r\n          name: \"Test User\",\r\n          token: \"mock-jwt-token\",\r\n        };\r\n      } else {\r\n        return rejectWithValue(\"Invalid email or password\");\r\n      }\r\n    } catch (error) {\r\n      return rejectWithValue(\"Something went wrong\");\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.error = null;\r\n      localStorage.removeItem(\"authToken\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        localStorage.setItem(\"authToken\", action.payload.token);\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}